"""initial setup

Revision ID: 9fcf518cfc7c
Revises: 
Create Date: 2025-04-20 10:07:23.096095

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9fcf518cfc7c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Users',
    sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('role', sa.Enum('ADMIN', 'USER', 'PREMIUM_USER', name='userrole'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email', name='uq_users_email'),
    sa.UniqueConstraint('username', name='uq_users_username'),
    sqlite_autoincrement=True
    )
    op.create_index(op.f('ix_Users_email'), 'Users', ['email'], unique=False)
    op.create_index(op.f('ix_Users_is_deleted'), 'Users', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_Users_username'), 'Users', ['username'], unique=False)
    op.create_table('Conversations',
    sa.Column('conversation_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'ARCHIVED', name='conversationstatus'), nullable=False),
    sa.Column('last_activity', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['Users.user_id'], name='fk_conversation_user_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('conversation_id')
    )
    op.create_index('idx_conversations_user_status', 'Conversations', ['user_id', 'status'], unique=False)
    op.create_index(op.f('ix_Conversations_is_deleted'), 'Conversations', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_Conversations_user_id'), 'Conversations', ['user_id'], unique=False)
    op.create_table('Payments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('payment_id', sa.String(length=100), nullable=False),
    sa.Column('order_id', sa.String(length=100), nullable=False),
    sa.Column('amount', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=10), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('payment_method', sa.String(length=50), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['Users.user_id'], name='fk_payment_user_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('order_id', name='uq_payments_order_id'),
    sa.UniqueConstraint('payment_id', name='uq_payments_payment_id'),
    sqlite_autoincrement=True
    )
    op.create_index(op.f('ix_Payments_status'), 'Payments', ['status'], unique=False)
    op.create_index(op.f('ix_Payments_user_id'), 'Payments', ['user_id'], unique=False)
    op.create_table('Subscriptions',
    sa.Column('subscription_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('plan', sa.Enum('FREE', 'PRO', 'ENTERPRISE', name='subscriptionplan'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('expiry_date', sa.DateTime(), nullable=True),
    sa.Column('auto_renew', sa.Boolean(), nullable=False),
    sa.Column('last_payment_id', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('start_date <= expiry_date OR expiry_date IS NULL', name='ck_subscriptions_date_order'),
    sa.ForeignKeyConstraint(['user_id'], ['Users.user_id'], name='fk_subscription_user_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('subscription_id'),
    sqlite_autoincrement=True
    )
    op.create_index(op.f('ix_Subscriptions_expiry_date'), 'Subscriptions', ['expiry_date'], unique=False)
    op.create_index(op.f('ix_Subscriptions_is_active'), 'Subscriptions', ['is_active'], unique=False)
    op.create_index(op.f('ix_Subscriptions_user_id'), 'Subscriptions', ['user_id'], unique=False)
    op.create_table('User_Settings',
    sa.Column('setting_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('theme', sa.Enum('LIGHT', 'DARK', name='themetype'), nullable=False),
    sa.Column('preferred_model', sa.String(length=50), nullable=False),
    sa.Column('language_preference', sa.String(length=50), nullable=False),
    sa.Column('notifications_enabled', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['Users.user_id'], name='fk_user_settings_user_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('setting_id')
    )
    op.create_index('idx_user_settings_user_id', 'User_Settings', ['user_id'], unique=False)
    op.create_index(op.f('ix_User_Settings_user_id'), 'User_Settings', ['user_id'], unique=False)
    op.create_table('Messages',
    sa.Column('message_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('conversation_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role', sa.Enum('USER', 'ASSISTANT', 'SYSTEM', name='messagerole'), nullable=False),
    sa.Column('message_text', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('response_time_ms', sa.Integer(), nullable=True),
    sa.Column('token_count', sa.Integer(), nullable=True),
    sa.Column('model_used', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['conversation_id'], ['Conversations.conversation_id'], name='fk_message_conversation_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['Users.user_id'], name='fk_message_user_id', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('message_id')
    )
    op.create_index('idx_messages_by_conversation', 'Messages', ['conversation_id', 'timestamp'], unique=False)
    op.create_index('idx_messages_by_user', 'Messages', ['user_id'], unique=False)
    op.create_index(op.f('ix_Messages_conversation_id'), 'Messages', ['conversation_id'], unique=False)
    op.create_index(op.f('ix_Messages_timestamp'), 'Messages', ['timestamp'], unique=False)
    op.create_index(op.f('ix_Messages_user_id'), 'Messages', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_Messages_user_id'), table_name='Messages')
    op.drop_index(op.f('ix_Messages_timestamp'), table_name='Messages')
    op.drop_index(op.f('ix_Messages_conversation_id'), table_name='Messages')
    op.drop_index('idx_messages_by_user', table_name='Messages')
    op.drop_index('idx_messages_by_conversation', table_name='Messages')
    op.drop_table('Messages')
    op.drop_index(op.f('ix_User_Settings_user_id'), table_name='User_Settings')
    op.drop_index('idx_user_settings_user_id', table_name='User_Settings')
    op.drop_table('User_Settings')
    op.drop_index(op.f('ix_Subscriptions_user_id'), table_name='Subscriptions')
    op.drop_index(op.f('ix_Subscriptions_is_active'), table_name='Subscriptions')
    op.drop_index(op.f('ix_Subscriptions_expiry_date'), table_name='Subscriptions')
    op.drop_table('Subscriptions')
    op.drop_index(op.f('ix_Payments_user_id'), table_name='Payments')
    op.drop_index(op.f('ix_Payments_status'), table_name='Payments')
    op.drop_table('Payments')
    op.drop_index(op.f('ix_Conversations_user_id'), table_name='Conversations')
    op.drop_index(op.f('ix_Conversations_is_deleted'), table_name='Conversations')
    op.drop_index('idx_conversations_user_status', table_name='Conversations')
    op.drop_table('Conversations')
    op.drop_index(op.f('ix_Users_username'), table_name='Users')
    op.drop_index(op.f('ix_Users_is_deleted'), table_name='Users')
    op.drop_index(op.f('ix_Users_email'), table_name='Users')
    op.drop_table('Users')
    # ### end Alembic commands ###
